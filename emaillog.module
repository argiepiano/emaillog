<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function emaillog_form_system_logging_settings_alter(&$form, $form_state) {
  $form['emaillog'] = array(
    '#title' => 'Email Log',
    '#type' => 'fieldset',
    '#collapsed' => TRUE,
  );
  $form['emaillog']['emaillog_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Send log entries by email'),
    '#default_value' => variable_get('emaillog_enabled', FALSE),
  );
  $form['emaillog']['emaillog_severity'] = array(
    '#type' => 'select',
    '#title' => t('Minimum severity'),
    '#default_value' => variable_get('emaillog_severity', WATCHDOG_WARNING),
    '#options' => watchdog_severity_levels(),
    '#description' => t('Select minimum severity when entry should be sent by email.'),
  );
}

/**
 * Implements hook_watchdog().
 */
function emaillog_watchdog(array $log_entry) {

  // Feature needs to be enabled from configuration
  if (!variable_get('emaillog_enabled', FALSE)) {
    return;
  }

  // Limit this feature to certain severity level
  if (!($log_entry['severity'] <= variable_get('emaillog_severity', WATCHDOG_WARNING))) {
    return;
  }

  global $base_url, $language;

  $severity_list = watchdog_severity_levels();

  $to = variable_get('site_mail');
  $params = array();
  $params['subject'] = t('@site_name @severity_desc', array(
    '@site_name' => variable_get('site_name', 'Drupal'), 
    '@severity_desc' => $severity_list[$log_entry['severity']],
  ));

  // Replace message variables
  $message = t($log_entry['message'], $log_entry['variables']);

  $params['message']  = "\nSite:         @base_url";
  $params['message'] .= "\nSeverity:     (@severity) @severity_desc";
  $params['message'] .= "\nTimestamp:    @timestamp";
  $params['message'] .= "\nType:         @type";
  $params['message'] .= "\nIP Address:   @ip";
  $params['message'] .= "\nRequest URI:  @request_uri";
  $params['message'] .= "\nReferrer URI: @referer_uri";
  $params['message'] .= "\nUser:         (@uid) @name";
  if ($log_entry['link']) {
    $params['message'] .= "\nLink:         @link";
  }
  $params['message'] .= "\n\n\n" . strip_tags($message);

  $params['message'] = t($params['message'], array(
    '@base_url' => $base_url, 
    '@severity' => $log_entry['severity'], 
    '@severity_desc' => $severity_list[$log_entry['severity']], 
    '@timestamp' => format_date($log_entry['timestamp']), 
    '@type' => $log_entry['type'], 
    '@ip' => $log_entry['ip'], 
    '@request_uri' => $log_entry['request_uri'], 
    '@referer_uri' => $log_entry['referer'], 
    '@uid' => $log_entry['uid'], 
    '@name' => $log_entry['user']->name, 
    '@link' => strip_tags($log_entry['link']), 
  ));

  drupal_mail('emaillog', 'entry', $to, $language, $params);
}

/**
 * Implements hook_mail().
 */
function emaillog_mail($key, &$message, $params) {
  switch ($key) {
    case 'entry':
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['message'];
      break;
  }
}
